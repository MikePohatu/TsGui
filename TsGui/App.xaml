<Application x:Class="TsGui.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="clr-namespace:TsGui.View.Layout.Converters"
             Application.DispatcherUnhandledException="OnDispatcherUnhandledException"
             >
    <Application.Resources>
        <ResourceDictionary>
            <Converters:FontWeightConverter x:Key="FontWeight"/>
            <Converters:FontStyleConverter x:Key="FontStyle"/>
            <Converters:XmlStringLineConverter x:Key="XmlStringLine"/>

            <Style x:Key="LabelStyle" TargetType="Label">
                <Setter Property="Control.Height" Value="{Binding LabelStyle.Height}"/>
                <Setter Property="Control.Width" Value="{Binding LabelStyle.Width}"/>
                <Setter Property="Control.Margin" Value="{Binding LabelStyle.Margin}"/>
                <Setter Property="Control.VerticalAlignment" Value="{Binding LabelStyle.VerticalAlignment}"/>
                <Setter Property="Control.HorizontalAlignment" Value="{Binding LabelStyle.HorizontalAlignment}"/>
                <Setter Property="Control.HorizontalContentAlignment" Value="{Binding LabelStyle.HorizontalContentAlignment}"/>
                <Setter Property="Control.VerticalContentAlignment" Value="{Binding LabelStyle.VerticalContentAlignment}"/>
                <Setter Property="Control.Padding" Value="{Binding LabelStyle.Padding}"/>
                <Setter Property="Control.FontWeight" Value="{Binding Path=LabelStyle.FontWeight, Converter={StaticResource FontWeight}}"/>
                <Setter Property="Control.FontStyle" Value="{Binding Path=LabelStyle.FontStyle, Converter={StaticResource FontStyle}}"/>
                <Setter Property="Control.FontSize" Value="{Binding LabelStyle.FontSize}"/>
                <Setter Property="Foreground" Value="{Binding LabelStyle.FontColorBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ControlStyle">
                <Setter Property="Control.Height" Value="{Binding ControlStyle.Height}"/>
                <Setter Property="Control.Width" Value="{Binding ControlStyle.Width}"/>
                <Setter Property="Control.Margin" Value="{Binding ControlStyle.Margin}"/>
                <Setter Property="Control.Padding" Value="{Binding ControlStyle.Padding}"/>
                <Setter Property="Control.VerticalAlignment" Value="{Binding ControlStyle.VerticalAlignment}"/>
                <Setter Property="Control.HorizontalAlignment" Value="{Binding ControlStyle.HorizontalAlignment}"/>
                <Setter Property="Control.HorizontalContentAlignment" Value="{Binding ControlStyle.HorizontalContentAlignment}"/>
                <Setter Property="Control.VerticalContentAlignment" Value="{Binding ControlStyle.VerticalContentAlignment}"/>
                <Setter Property="Control.FontWeight" Value="{Binding Path=ControlStyle.FontWeight, Converter={StaticResource FontWeight}}"/>
                <Setter Property="Control.FontStyle" Value="{Binding Path=ControlStyle.FontStyle, Converter={StaticResource FontStyle}}"/>
                <Setter Property="Control.FontSize" Value="{Binding ControlStyle.FontSize}"/>
            </Style>

            <Style x:Key="TrafficLightStyle">
                <Setter Property="Shape.Height" Value="{Binding IconHeight}"/>
                <Setter Property="Shape.Width" Value="{Binding IconWidth}"/>
                <Setter Property="Shape.Fill" Value="{Binding FillColor}"/>
            </Style>

            <Style x:Key="ContentControlStyle" TargetType="ContentControl" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="Foreground" Value="{Binding ControlStyle.FontColorBrush}"/>
                <Setter Property="Control.FontSize" Value="{Binding ControlStyle.FontSize}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Border Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FreeTextStyle" TargetType="TextBox" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="TextAlignment" Value="{Binding ControlStyle.TextAlignment}"/>
                <Setter Property="MaxLength" Value="{Binding MaxLength}"/>
                <Setter Property="Foreground" Value="{Binding ControlStyle.FontColorBrush}"/>
                <Setter Property="Control.FontSize" Value="{Binding ControlStyle.FontSize}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border Name="Border" BorderBrush="{Binding ControlStyle.BorderBrush}" BorderThickness="{Binding ControlStyle.BorderThickness}"
                                    Background="White">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TextBox.IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding ControlStyle.MouseOverBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="InfoBoxStyle" TargetType="TextBlock" BasedOn="{StaticResource ControlStyle}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource ControlStyle}">
                <Setter Property="MaxLength" Value="{Binding MaxLength}"/>
                <Setter Property="Foreground" Value="{Binding ControlStyle.FontColorBrush}"/>
                <Setter Property="Control.FontSize" Value="{Binding ControlStyle.FontSize}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border Name="Border" BorderBrush="{Binding ControlStyle.BorderBrush}" BorderThickness="{Binding ControlStyle.BorderThickness}"
                                    Background="White">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="PasswordBox.IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{Binding ControlStyle.MouseOverBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="Border" Value="0.56"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            

            <Style x:Key="CollectionItemLabelStyle" TargetType="Label">
                <Setter Property="Control.Height" Value="Auto"/>
                <Setter Property="Control.Margin" Value="0"/>
                <Setter Property="Control.Padding" Value="0"/>
                <Setter Property="Control.VerticalAlignment" Value="Stretch"/>
                <Setter Property="Control.HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Control.HorizontalContentAlignment" Value="{Binding ItemStyle.HorizontalContentAlignment}"/>
                <Setter Property="Control.VerticalContentAlignment" Value="{Binding ItemStyle.VerticalContentAlignment}"/>
                <Setter Property="Foreground" Value="{Binding ItemStyle.FontColorBrush}"/>
                <Setter Property="Control.FontWeight" Value="{Binding Path=ItemStyle.FontWeight, Converter={StaticResource FontWeight}}"/>
                <Setter Property="Control.FontStyle" Value="{Binding Path=ItemStyle.FontStyle, Converter={StaticResource FontStyle}}"/>
                <Setter Property="Control.FontSize" Value="{Binding ItemStyle.FontSize}"/>
            </Style>
            
            <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type ButtonBase}">
                <Border x:Name="border" CornerRadius="{Binding ControlStyle.CornerRadius}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted" Value="True">
                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                        <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
